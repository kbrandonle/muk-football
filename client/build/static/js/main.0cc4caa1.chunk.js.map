{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/ConfirmDeleteAccount.js","components/CreateEditAccountDialog.js","components/ResetPasswordDialog.js","components/LookUpAccountDialog.js","components/SecurityQuestionDialog.js","components/LoginPage.js","components/TeamPage.js","components/Matchup.js","components/CoursesTable.js","components/CoursesPage.js","components/ProfilePage.js","components/DraftPage.js","components/AboutBox.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","TEAM","MATCHUP","COURSES","DRAFT","PROFILE","Object","freeze","NavBar","getMenuBtnIcon","props","mode","ROUNDS_LOGROUND","ROUNDS_EDITROUND","menuOpen","handleMenuBtnClick","changeMode","ROUNDS","toggleMenuOpen","className","id","onClick","this","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","profilePicURL","displayName","localAccount","editAccount","showAbout","logOut","ModeBar","FEED","ConfirmDeleteAccount","handleChange","match","emailRef","current","value","email","state","emailMatches","setState","createRef","focus","role","close","type","ref","onChange","deleteAccount","disabled","CreateEditAccountDialog","checkDataValidity","password","passwordRepeat","repeatPassRef","setCustomValidity","event","formUpdated","origAccountInfo","formIsUpdated","target","name","length","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","updateField","updateVal","securityQuestion","securityAnswer","phoneNumber","teamName","leagueID","setDefaultDisplayName","handleSubmit","a","preventDefault","userData","url","accountName","create","fetch","headers","Accept","method","body","JSON","stringify","res","status","done","text","resText","league","leagueName","userIds","leagueId","addTeamToLeague","addLeague","msg","console","log","newData","confirmDelete","confirmDeleteAccount","e","newUserRef","userId","json","parse","cancel","onSubmit","autocomplete","size","placeholder","pattern","required","onBlur","accept","profilePic","profilePicDataURL","rows","cols","maxLength","ResetPasswordDialog","resetPasswordRef","resetPasswordRepeatRef","resetPassword","errorMsg","checkForSubmit","code","cancelResetPassword","onKeyUp","LookUpAccountDialog","handleLookUpAccount","response","obj","authStrategy","getSecurityAnswer","ErrMsg","errMsg","SecurityQuestionDialog","securityAnswerRef","answer","getNewPassword","readOnly","question","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","emailInputRef","passwordInputRef","window","open","statusMsg","accountCreateDone","showCreateAccountDialog","cancelCreateAccount","resetUserId","resetQ","resetA","showLookUpAccountDialog","showSecurityQuestionDialog","showResetPaswordDialog","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","pw","showResetPasswordDialog","deleted","closeStatusMsg","githubIcon","githubLabel","googleIcon","googleLabel","loginMsg","newAccountCreated","htmlFor","style","padding","fontSize","FeedPage","getFFP","getCurrentData","playerData","i","players","r","player","fullName","k","stats","seasonId","scoringPeriodId","statSourceId","statSplitTypeId","temp","push","position","starter","appliedTotal","playerStats","confirmRender","showRender","populateForm","names","positions","renderTable","componentDidMount","userObj","table","key","s","data","nflList","playerName","Matchup","CoursesTable","users","win","loss","keys","colSpan","fontStyle","CoursesPage","LeagueName","ProfilePage","achievements","description","class","DraftPage","setList","NFLPlayerList","QBList","RBList","WRList","TEList","KList","getLeagueData","leagueData","getListOfAllPlayersFromLeague","unavailablePlayers","leagueUserIds","j","leaguePlayers","validatePlayers","duplicatePlayers","qb","rb","wr","te","alert","join","addPlayers","player1","player2","player3","player4","player5","DefList","def","MakeItem","X","map","modeTitle","modeToPage","TeamPage","App","refreshOnUpdate","newMode","handleChangeMode","openMenu","closeMenu","openDraft","showDraftDialog","closeDraft","prevState","setUserId","Id","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","editAccountDone","filters","limit","sortDraftRanks","sortPriority","sortAsc","options","showAboutDialog","then","isAuthenticated","user","ModePage","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cc4caa1.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n  LOGIN: \"LoginMode\",\r\n  TEAM: \"TeamMode\",\r\n  MATCHUP: \"MatchupMode\",\r\n  COURSES: \"CoursesMode\",\r\n  DRAFT: \"DraftMode\",\r\n  PROFILE: \"ProfileMode\",\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;\r\n","import React from \"react\";\r\nimport AppMode from \"../AppMode\";\r\n\r\nclass NavBar extends React.Component {\r\n  getMenuBtnIcon = () => {\r\n    if (\r\n      this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n      this.props.mode === AppMode.ROUNDS_EDITROUND\r\n    )\r\n      return \"fa fa-arrow-left\";\r\n    if (this.props.menuOpen) return \"fa fa-times\";\r\n    return \"fa fa-bars\";\r\n  };\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (\r\n      this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n      this.props.mode === AppMode.ROUNDS_EDITROUND\r\n    ) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode != AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <span className=\"navbar-items\">\r\n          <button\r\n            id=\"hamburgerBtn\"\r\n            className=\"sidemenu-btn\"\r\n            onClick={this.handleMenuBtnClick}\r\n          >\r\n            <span\r\n              id=\"menuBtnIcon\"\r\n              className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}\r\n            ></span>\r\n          </button>\r\n          <img\r\n            src=\"https://lh3.googleusercontent.com/67bm3dUVRAo1KOmlGd3VW1Q3_8JUctsx-_qkIfwZ9ZdV1rmXVeNmnYg9oLI_Jl8R30pxCP6MGb3dJzBPl4u1Qs-z2AmPMR0sNbn2anY8k6Fby6LyaeS2iWjeFDxsFW0xz8q6azcf-JM=s256-p-k\"\r\n            alt=\"Fantasy Football Logo\"\r\n            height=\"28px\"\r\n            width=\"28px\"\r\n          />\r\n          <span className=\"navbar-title\">&nbsp;{this.props.title}</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nclass SideMenu extends React.Component {\r\n  //renderModeItems -- Renders correct subset of mode menu items based on\r\n  //current mode, which is stored in this.prop.mode. Uses switch statement to\r\n  //determine mode.\r\n  renderModeMenuItems = () => {\r\n    switch (this.props.mode) {\r\n      case AppMode.TEAM:\r\n        return (\r\n          <div>\r\n            <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-users\"></span>&nbsp;Followed Users\r\n            </a>\r\n            <a className=\"sidemenu-item \">\r\n              <span className=\"fa fa-search\"></span>&nbsp;Search Feed\r\n            </a>\r\n          </div>\r\n        );\r\n        break;\r\n      case AppMode.ROUNDS:\r\n        return (\r\n          <div>\r\n            <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-plus\"></span>&nbsp;Log New Round\r\n            </a>\r\n            <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-search\"></span>&nbsp;Search Rounds\r\n            </a>\r\n          </div>\r\n        );\r\n        break;\r\n      case AppMode.COURSES:\r\n        return (\r\n          <div>\r\n            <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-plus\"></span>&nbsp;Add a Course\r\n            </a>\r\n            <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-search\"></span>&nbsp;Search Courses\r\n            </a>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"sidemenu \" +\r\n          (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")\r\n        }\r\n        onClick={this.props.toggleMenuOpen}\r\n      >\r\n        {/* SIDE MENU TITLE */}\r\n        <div className=\"sidemenu-title\">\r\n          <img src={this.props.profilePicURL} height=\"60\" width=\"60\" />\r\n          <span id=\"userID\" className=\"sidemenu-userID\">\r\n            &nbsp;{this.props.displayName}\r\n          </span>\r\n        </div>\r\n        {/* MENU CONTENT */}\r\n        {/* {this.renderModeMenuItems()} */}\r\n        {/* The following menu items are present regardless of mode */}\r\n        <a\r\n          id=\"profileBtn\"\r\n          className=\"sidemenu-item\"\r\n          onClick={() => this.props.changeMode(AppMode.PROFILE)}\r\n        >\r\n          <span className=\"fa fa-info-circle\"></span>&nbsp;Profile\r\n        </a>\r\n        {this.props.localAccount ? (\r\n          <a\r\n            id=\"accountBtn\"\r\n            className=\"sidemenu-item\"\r\n            onClick={this.props.editAccount}\r\n          >\r\n            <span className=\"fa fa-user\"></span>&nbsp;Edit Account\r\n          </a>\r\n        ) : null}\r\n        <a\r\n          id=\"draftBtn\"\r\n          className=\"sidemenu-item\"\r\n          onClick={() => this.props.changeMode(AppMode.DRAFT)}\r\n        >\r\n          <span></span>&nbsp;Draft Team\r\n        </a>\r\n\r\n        <a\r\n          id=\"aboutBtn\"\r\n          className=\"sidemenu-item\"\r\n          onClick={this.props.showAbout}\r\n        >\r\n          <span className=\"fa fa-info-circle\"></span>&nbsp;About\r\n        </a>\r\n        <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n          <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from \"react\";\r\nimport AppMode from \"../AppMode.js\";\r\n\r\nclass ModeBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"modebar\" +\r\n          (this.props.mode === AppMode.LOGIN\r\n            ? \" invisible\"\r\n            : this.props.menuOpen\r\n            ? \" ignore-click visible\"\r\n            : \" visible\")\r\n        }\r\n      >\r\n        <a\r\n          id=\"feedModeBtn\"\r\n          className={this.props.mode === AppMode.FEED ? \" item-selected\" : null}\r\n          onClick={() => this.props.changeMode(AppMode.TEAM)}\r\n        >\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">My Team</span>\r\n        </a>\r\n        <a\r\n          id=\"matchupModeBtn\"\r\n          className={\r\n            this.props.mode === AppMode.MATCHUP ? \" item-selected\" : null\r\n          }\r\n          onClick={() => this.props.changeMode(AppMode.MATCHUP)}\r\n        >\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Games</span>\r\n        </a>\r\n        <a\r\n          id=\"coursesModeBtn\"\r\n          className={\r\n            this.props.mode === AppMode.COURSES ? \" item-selected\" : null\r\n          }\r\n          onClick={() => this.props.changeMode(AppMode.COURSES)}\r\n        >\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">My League</span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\n\r\nclass ConfirmDeleteAccount extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {emailMatches: false};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.emailRef.current.focus();\r\n    }\r\n\r\n    handleChange = () => {\r\n        const match = (this.emailRef.current.value === this.props.email);\r\n        if (match != this.state.emailMatches) {\r\n            this.setState({emailMatches: match});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Account Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete your account? <br />\r\n                 <i>This action cannot be undone.</i></p>\r\n              <label>\r\n                Confirm Email ({this.props.email}):\r\n                <br/>\r\n                <input \r\n                    className=\"form-center\"\r\n                    type=\"text\"\r\n                    ref={this.emailRef}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <br />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteAccount} disabled={!this.state.emailMatches}>\r\n                  Yes, Delete My Account</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteAccount;","import React from \"react\";\r\nimport ConfirmDeleteAccount from \"./ConfirmDeleteAccount.js\";\r\n\r\nclass CreateEditAccountDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.origAccountInfo = null;\r\n    //Create a ref for the email input DOM element\r\n    this.newUserRef = React.createRef();\r\n    this.repeatPassRef = React.createRef();\r\n    this.profilePicRef = React.createRef();\r\n    this.state = {\r\n      accountName: \"\",\r\n      displayName: \"\",\r\n      profilePicURL:\r\n        \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n      password: \"\",\r\n      passwordRepeat: \"\",\r\n      securityQuestion: \"\",\r\n      securityAnswer: \"\",\r\n      phoneNumber: \"\",\r\n      teamName: \"\",\r\n      leagueID: \"\", //holding league id for each user\r\n      formUpdated: false,\r\n      confirmDelete: false,\r\n      // league: {}\r\n    };\r\n  }\r\n\r\n  //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\r\n  //the database and push them into the state.\r\n  async componentDidMount() {\r\n    if (!this.props.create) {\r\n      //obtain current user data from database and push into state\r\n      const url = \"/users/\" + this.props.userId;\r\n      const res = await fetch(url);\r\n      const json = await res.json();\r\n      const userData = JSON.parse(json);\r\n      console.log(userData);\r\n      this.origAccountInfo = userData; //This determines whether update can occur\r\n      this.origAccountInfo.passwordRepeat = userData.password;\r\n      this.setState({\r\n        accountName: this.props.userId,\r\n        displayName: userData.displayName,\r\n        profilePicURL: userData.profilePicURL,\r\n        password: userData.password,\r\n        passwordRepeat: userData.password,\r\n        securityQuestion: userData.securityQuestion,\r\n        securityAnswer: userData.securityAnswer,\r\n        phoneNumber: userData.phoneNumber,\r\n        teamName: userData.teamName,\r\n        leagueID: userData.leagueID,\r\n      });\r\n    }\r\n  }\r\n\r\n  //checkDataValidity -- Callback function invoked after a form element in\r\n  //the 'Create Account' dialog box changes and component state has been\r\n  //updated. We first check whether the passwords match. If they do not,\r\n  //we set a custom validity message to be displayed when the user clicks the\r\n  //'Create Account' button. Otherwise, we reset the custom validity message\r\n  //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n  //Second, we check whether anything in the form changed from the original.\r\n  //If so, we update the 'formUpdated' state var, so that the form's submit\r\n  //button is enabled.\r\n  checkDataValidity = () => {\r\n    if (this.state.password != this.state.passwordRepeat) {\r\n      //Passwords don't match\r\n      this.repeatPassRef.current.setCustomValidity(\r\n        \"This password must match password entered in previous field.\"\r\n      );\r\n    } else {\r\n      this.repeatPassRef.current.setCustomValidity(\"\");\r\n    }\r\n  };\r\n\r\n  //handleChange--Called when a field in a dialog box form changes.\r\n  handleChange = (event) => {\r\n    const formUpdated =\r\n      this.origAccountInfo == null\r\n        ? true\r\n        : this.formIsUpdated(event.target.name, event.target.value);\r\n    if (event.target.name === \"profilePic\") {\r\n      if (event.target.value.length == 0) {\r\n        //The user canceled the file selection -- set back to default\r\n        this.setState(\r\n          {\r\n            profilePicURL:\r\n              \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n            formUpdated: formUpdated,\r\n          },\r\n          this.checkDataValidity\r\n        );\r\n      } else {\r\n        //The user selected a file\r\n        const self = this;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(this.profilePicRef.current.files[0]);\r\n        reader.addEventListener(\"load\", function () {\r\n          self.setState(\r\n            { profilePicURL: this.result, formUpdated: formUpdated },\r\n            this.checkDataValidity\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      this.setState(\r\n        { [event.target.name]: event.target.value, formUpdated: formUpdated },\r\n        this.checkDataValidity\r\n      );\r\n    }\r\n  };\r\n\r\n  //formisUpdated-- Checks whether any form data element has changed from the original. If so,\r\n  //returns true. Returns false otherwise. Note that in case of editing new account, always returns\r\n  //true since this.origAccountInfo is set to null.\r\n  //Should be called whenever the user makes a change to form data.\r\n  formIsUpdated = (updateField, updateVal) => {\r\n    if (this.origAccountInfo[updateField] != updateVal) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"displayName\" &&\r\n      this.state.displayName != this.origAccountInfo.displayName\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"profilePicURL\" &&\r\n      this.state.profilePicURL != this.origAccountInfo.profilePicURL\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"password\" &&\r\n      this.state.password !== this.origAccountInfo.password\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"passwordRepeat\" &&\r\n      this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"securityQuestion\" &&\r\n      this.state.securityQuestion !== this.origAccountInfo.securityQuestion\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"securityAnswer\" &&\r\n      this.state.securityAnswer !== this.origAccountInfo.securityAnswer\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"phoneNumber\" &&\r\n      this.state.phoneNumber !== this.origAccountInfo.phoneNumber\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"teamName\" &&\r\n      this.state.teamName !== this.origAccountInfo.teamName\r\n    ) {\r\n      return true;\r\n    }\r\n    if (\r\n      updateField != \"leagueID\" &&\r\n      this.state.leagueID !== this.origAccountInfo.leagueID\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\r\n  //Sets default value of display name to value entered into Email field\r\n  //as a courtesy.\r\n  setDefaultDisplayName = (event) => {\r\n    if (event.target.value.length > 0 && this.state.displayName === \"\") {\r\n      this.setState({ displayName: event.target.value });\r\n    }\r\n  };\r\n\r\n  //handleSubmit -- Triggered when user clicks on submit button to\r\n  //either create or edit account.\r\n  //Custom data checking ensures user account under this email does not\r\n  //already exist and that the rest of the info is valid. We create a new\r\n  // object for user, save it to localStorage and take user to app's\r\n  //landing page.\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    //Initialize user account\r\n    let userData = {\r\n      displayName: this.state.displayName,\r\n      password: this.state.password,\r\n      profilePicURL: this.state.profilePicURL,\r\n      securityQuestion: this.state.securityQuestion,\r\n      securityAnswer: this.state.securityAnswer,\r\n      phoneNumber: this.state.phoneNumber,\r\n      teamName: this.state.teamName,\r\n      leagueID: this.state.leagueID,\r\n    };\r\n    const url = \"/users/\" + this.state.accountName;\r\n    let res;\r\n    if (this.props.create) {\r\n      //use POST route to create new user account\r\n      res = await fetch(url, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(userData),\r\n      });\r\n      if (res.status == 200) {\r\n        //successful account creation!\r\n        this.props.done(\r\n          \"New account created! Enter credentials to log in.\",\r\n          false\r\n        );\r\n      } else {\r\n        //Unsuccessful account creation\r\n        //Grab textual error message\r\n        const resText = await res.text();\r\n        this.props.done(resText, false);\r\n      }\r\n\r\n      let league = {\r\n        leagueName: \"\",\r\n        userIds: this.state.accountName,\r\n        leagueId: this.state.leagueID\r\n      }\r\n\r\n      this.addTeamToLeague();\r\n      this.addLeague(league);\r\n\r\n    } else {\r\n      //use PUT route to update existing user account\r\n      res = await fetch(url, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        method: \"PUT\",\r\n        body: JSON.stringify(userData),\r\n      });\r\n      if (res.status == 200) {\r\n        //successful account creation!\r\n        this.props.done(\"User Account Updated!\", false);\r\n      } else {\r\n        //Unsuccessful account update\r\n        //Grab textual error message\r\n        const resText = await res.text();\r\n        this.props.done(resText, false);\r\n      }\r\n    }\r\n  };\r\n\r\n  addTeamToLeague = async () => {\r\n    const url = 'http://localhost:8081/addplayerstoleague/' + this.state.leagueID + '/' + this.state.accountName;\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'POST',\r\n        body: JSON.stringify(this.state.accountName)}); \r\n    const msg = await res.text();\r\n    if (res.status != 200) {\r\n        console.log(msg);\r\n    } else {\r\n      console.log(msg);\r\n    }\r\n  }; \r\n\r\n  addLeague = async (newData) => {\r\n    const url = 'http://localhost:8081/createleague';\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'POST',\r\n        body: JSON.stringify(newData)}); \r\n    const msg = await res.text();\r\n    if (res.status != 200) {\r\n        console.log(msg);\r\n    } else {\r\n      console.log(msg);\r\n    }\r\n  }; \r\n\r\n\r\n\r\n\r\n  //deleteAccount -- Called after confirms account deletion.\r\n  //Uses DELETE server route to perform server deletion.\r\n  //Calls on done with status message and\r\n  //true if delete was succesful, false otherwise.\r\n  deleteAccount = async () => {\r\n    const url = \"/users/\" + this.state.accountName;\r\n    const res = await fetch(url, { method: \"DELETE\" });\r\n    if (res.status == 200) {\r\n      //successful account deletion!\r\n      this.props.done(\r\n        \"Account '\" + this.state.accountName + \"' has been deleted.\",\r\n        true\r\n      );\r\n    } else {\r\n      //Unsuccessful account deletion\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      this.props.done(resText, false);\r\n    }\r\n    this.setState({ confirmDelete: false });\r\n  };\r\n\r\n  //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\r\n  //button to indicate intention to delete account. Presents the Confirm\r\n  //Delete dialog box.\r\n  confirmDeleteAccount = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ confirmDelete: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\"></div>\r\n        <div className=\"modal-content form-center\">\r\n          <div className=\"modal-header\">\r\n            <h3>\r\n              <b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b>\r\n            </h3>\r\n            <button className=\"modal-close\" onClick={this.props.cancel}>\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label>\r\n                Email:\r\n                <input\r\n                  autocomplete=\"off\"\r\n                  disabled={!this.props.create}\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"accountName\"\r\n                  type=\"email\"\r\n                  size=\"35\"\r\n                  placeholder=\"Enter Email Address\"\r\n                  pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                  required={true}\r\n                  ref={this.newUserRef}\r\n                  value={this.state.accountName}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.setDefaultDisplayName}\r\n                />\r\n              </label>\r\n              <br />\r\n              <label>\r\n                Password:\r\n                <input\r\n                  autocomplete=\"off\"\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  size=\"35\"\r\n                  placeholder=\"Enter Password\"\r\n                  required={true}\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </label>\r\n              <br />\r\n              <label>\r\n                Repeat Password:\r\n                <input\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"passwordRepeat\"\r\n                  type=\"password\"\r\n                  size=\"35\"\r\n                  placeholder=\"Repeat Password\"\r\n                  required={true}\r\n                  ref={this.repeatPassRef}\r\n                  value={this.state.passwordRepeat}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </label>\r\n              <br />\r\n              <label>\r\n                Display Name:\r\n                <input\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"displayName\"\r\n                  type=\"text\"\r\n                  size=\"30\"\r\n                  placeholder=\"Display Name\"\r\n                  required={true}\r\n                  value={this.state.displayName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </label>\r\n              <br />\r\n              <label>\r\n                Profile Picture:\r\n                <br />\r\n                <input\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"profilePic\"\r\n                  type=\"file\"\r\n                  accept=\"image/x-png,image/gif,image/jpeg\"\r\n                  ref={this.profilePicRef}\r\n                  value={this.state.profilePic}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <img\r\n                  src={\r\n                    this.state.profilePicURL != \"\"\r\n                      ? this.state.profilePicURL\r\n                      : this.state.profilePicDataURL\r\n                  }\r\n                  height=\"60\"\r\n                  width=\"60\"\r\n                />\r\n              </label>\r\n              <br />\r\n              <label>\r\n                Security Question:\r\n                <textarea\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"securityQuestion\"\r\n                  size=\"35\"\r\n                  placeholder=\"Security Question\"\r\n                  rows=\"2\"\r\n                  cols=\"35\"\r\n                  maxLength=\"100\"\r\n                  required={true}\r\n                  value={this.state.securityQuestion}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </label>\r\n              <br />\r\n              <label>\r\n                Answer to Security Question:\r\n                <textarea\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"securityAnswer\"\r\n                  type=\"text\"\r\n                  placeholder=\"Answer\"\r\n                  rows=\"2\"\r\n                  cols=\"35\"\r\n                  maxLength=\"100\"\r\n                  required={true}\r\n                  value={this.state.securityAnswer}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </label>\r\n              <br />\r\n              <label>\r\n                Phone Number:\r\n                <input\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"phoneNumber\"\r\n                  type=\"text\"\r\n                  size=\"35\"\r\n                  placeholder=\"Phone Number\"\r\n                  required={true}\r\n                  value={this.state.phoneNumber}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </label>\r\n              <br />\r\n              <label>\r\n                Team Name:\r\n                <input\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"teamName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Team Name\"\r\n                  size=\"35\"\r\n                  required={true}\r\n                  value={this.state.teamName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </label>\r\n              <br />\r\n              <br />\r\n              <label>\r\n                League ID:\r\n                <input\r\n                  className=\"form-control form-text form-center\"\r\n                  name=\"leagueID\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter 0 if not yet in a league\"\r\n                  size=\"35\"\r\n                  required={true}\r\n                  value={this.state.leagueID}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </label>\r\n              <br />\r\n              {!this.props.create ? (\r\n                <button\r\n                  className=\"btn btn-small btn-danger\"\r\n                  onClick={this.confirmDeleteAccount}\r\n                >\r\n                  Delete Account...\r\n                </button>\r\n              ) : null}\r\n              <br />\r\n              <br />\r\n              <button\r\n                role=\"submit\"\r\n                disabled={!this.state.formUpdated}\r\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\"\r\n              >\r\n                <span\r\n                  className={\r\n                    this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"\r\n                  }\r\n                ></span>\r\n                &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        {this.state.confirmDelete ? (\r\n          <ConfirmDeleteAccount\r\n            email={this.state.accountName}\r\n            deleteAccount={this.deleteAccount}\r\n            close={() => this.setState({ confirmDelete: false })}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateEditAccountDialog;\r\n","import React from 'react'\r\n\r\nclass ResetPasswordDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.resetPasswordRef = React.createRef();\r\n        this.resetPasswordRepeatRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleSubmit -- When the user submits the form, ensure that the passwords match.\r\n    //If so, call on resetPassword in parent component to actually reset the password.\r\n    //Otherwise, display an error message prompting the user to try again.\r\n    handleSubmit= (event) => {\r\n        event.preventDefault();\r\n        if (this.resetPasswordRef.current.value === this.resetPasswordRepeatRef.current.value) {\r\n            this.props.resetPassword(this.resetPasswordRef.current.value);\r\n        } else {\r\n            this.resetPasswordRepeatRef.current.focus();\r\n            this.setState({errorMsg: \"The passwords you entered do not match. Please try again.\"});\r\n        }\r\n    }\r\n\r\n    checkForSubmit = (e) => {\r\n        if (e.code === \"Enter\") {\r\n            e.preventDefault();\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Reset Password</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        New Password: \r\n                        <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter new password\"\r\n                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                        className=\"form-control form-text\"\r\n                        ref={this.resetPasswordRef}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Repeat New Password: \r\n                        <input\r\n                        type=\"password\"\r\n                        placeholder=\"Repeat new password\"\r\n                        className=\"form-control form-text\"\r\n                        onKeyUp={this.checkForSubmit}\r\n                        ref={this.resetPasswordRepeatRef}\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                     className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );\r\n        \r\n    }\r\n}\r\n\r\nexport default ResetPasswordDialog;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass LookUpAccountDialog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n    //button, we check whether the account exists. If it does, we update the state,\r\n    //setting the resetEmail var to the email entered, hiding the current dialog box\r\n    //and showing the security question dialog box.\r\n    handleLookUpAccount = async(event) => {\r\n        event.preventDefault();\r\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\r\n        if (response.status == 200) {\r\n            const json = await response.json();\r\n            const obj = JSON.parse(json);\r\n            if (obj.authStrategy === \"local\") {\r\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\r\n            } else { //Account exists but was created through OAuth so password can't be reset \r\n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\r\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\r\n            }\r\n        } else {\r\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={() => {this.props.cancelResetPassword()}}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\r\n                    <form onSubmit={this.handleLookUpAccount}>\r\n                    <label>\r\n                        Account Email Address: \r\n                        <input\r\n                        ref={this.emailRef}\r\n                        className=\"form-control form-text\"\r\n                        type=\"email\"\r\n                        size=\"35\"\r\n                        placeholder=\"Enter Email Address\"\r\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                        ref={this.emailRef}\r\n                        required={true}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" \r\n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n        );   \r\n    }\r\n\r\n}\r\n\r\nexport default LookUpAccountDialog;\r\n","import React from 'react';\r\n\r\nclass SecurityQuestionDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.securityAnswerRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //Focus cursor in email secrity answer field when mounted\r\n    componentDidMount() {\r\n        this.securityAnswerRef.current.focus();\r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.securityAnswerRef.current.value === this.props.answer) {\r\n            this.props.getNewPassword();\r\n        } else {\r\n            this.securityAnswerRef.current.focus();\r\n            this.setState({errorMsg: \"Sorry, that is not the correct answer to the security question. Try again.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Answer Security Question</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Security Question: \r\n                        <textarea\r\n                        readOnly={true}\r\n                        value={this.props.question}\r\n                        className=\"form-control form-text\"\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Security Answer: \r\n                        <textarea\r\n                        className=\"form-control form-text\"\r\n                        placeholder=\"Enter Security Question Answer\"\r\n                        ref={this.securityAnswerRef}\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                      className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );        \r\n    }\r\n}\r\n export default SecurityQuestionDialog;","import React from \"react\";\r\nimport CreateEditAccountDialog from \"./CreateEditAccountDialog.js\";\r\nimport ResetPasswordDialog from \"./ResetPasswordDialog.js\";\r\nimport LookUpAccountDialog from \"./LookUpAccountDialog.js\";\r\nimport SecurityQuestionDialog from \"./SecurityQuestionDialog.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.resetUserId = \"\";\r\n    this.resetQ = \"\";\r\n    this.resetA = \"\";\r\n    this.passwordInputRef = React.createRef();\r\n    this.state = {\r\n      statusMsg: \"\",\r\n      loginBtnIcon: \"fa fa-sign-in\",\r\n      loginBtnLabel: \"Log In\",\r\n      showLookUpAccountDialog: false,\r\n      showSecurityQuestionDialog: false,\r\n      showResetPaswordDialog: false,\r\n      githubIcon: \"fa fa-github\",\r\n      githubLabel: \"Sign in with GitHub\",\r\n      googleIcon: \"fa fa-google\",\r\n      googleLabel: \"Sign in with Google\",\r\n      loginMsg: \"\",\r\n      newAccountCreated: false,\r\n    };\r\n  }\r\n\r\n  //Focus cursor in email input field when mounted\r\n  componentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n  }\r\n\r\n  //handleLoginSubmit -- Called when user clicks on login button.\r\n  handleLoginSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n      loginBtnLabel: \"Logging In...\",\r\n    });\r\n\r\n    /*     //post NFL players to the backend collection\r\n    var filters = {\r\n          \"players\": {\r\n              \"limit\": 1500,\r\n              \"sortDraftRanks\": {\r\n                  \"sortPriority\": 100,\r\n                  \"sortAsc\": true,\r\n                  \"value\": \"STANDARD\"\r\n              }\r\n          }\r\n        };\r\n    \r\n        var options = {\r\n            \"headers\": {\r\n                \"x-fantasy-filter\": JSON.stringify(filters)\r\n            }\r\n        };\r\n\r\n    const response = await fetch('https://fantasy.espn.com/apis/v3/games/FFL/seasons/2020/segments/0/leaguedefaults/1?view=kona_player_info', options);\r\n    const data = await response.json();\r\n\r\n    //console.log(data);\r\n    var i;\r\n    for (i = 0; i < data.players.length; i++) {\r\n      if (data.players[i].player.defaultPositionId != 16) {\r\n        console.log(data.players[i].player.fullName + \"     \" + data.players[i].player.defaultPositionId);\r\n\r\n        var pos = data.players[i].player.defaultPositionId;\r\n        var position = \"\";\r\n        if (pos == 1) {\r\n          position = \"QB\";\r\n        } else if (pos == 2) {\r\n          position = \"RB\";\r\n        } else if (pos == 3) {\r\n          position = \"WR\";\r\n        } else if (pos == 4) {\r\n          position = \"TE\";\r\n        } else if (pos == 5) {\r\n          position = \"Kicker\";\r\n        } else {\r\n          position = \"Unknown\";\r\n        }\r\n\r\n        var player = {};\r\n        player.playerId = i;\r\n        player.name = data.players[i].player.fullName;\r\n        player.position = position;\r\n\r\n        this.addNFLPlayers(player);\r\n      }\r\n      \r\n    }\r\n    //end */\r\n\r\n    const url =\r\n      \"auth/login?username=\" +\r\n      this.emailInputRef.current.value +\r\n      \"&password=\" +\r\n      this.passwordInputRef.current.value;\r\n    const res = await fetch(url, { method: \"POST\" });\r\n    if (res.status == 200) {\r\n      //successful login!\r\n      window.open(\"/\", \"_self\");\r\n    } else {\r\n      //Unsuccessful login\r\n      const resText = await res.text();\r\n      this.setState({\r\n        loginBtnIcon: \"fa fa-sign-in\",\r\n        loginBtnLabel: \"Log In\",\r\n        statusMsg: resText,\r\n      });\r\n    }\r\n  };\r\n\r\n  /*   //Add NFL Players to the collection\r\n  addNFLPlayers = async (newData) => {\r\n    const url = 'http://localhost:8081/addplayerstocollection';\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'POST',\r\n        body: JSON.stringify(newData)}); \r\n    const msg = await res.text();\r\n    if (res.status != 200) {\r\n        console.log(msg);\r\n    } else {\r\n      console.log(msg);\r\n    }\r\n} */\r\n\r\n  //accountCreateDone -- Called by child CreateAccountDialog component when\r\n  //user attempted to create new account. Hide the dialog and display\r\n  //a message indicating result of the attempt.\r\n  accountCreateDone = (msg) => {\r\n    this.setState({ statusMsg: msg, showCreateAccountDialog: false });\r\n  };\r\n\r\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n  cancelCreateAccount = () => {\r\n    this.setState({ showCreateAccountDialog: false });\r\n  };\r\n\r\n  //cancelResetPassword -- Called by one of the child three child dialog box components when\r\n  //the user decides to cancel resetting their password. Toggles state so that all three\r\n  //of the dialog boxes are hidden\r\n  cancelResetPassword = () => {\r\n    this.resetUserId = \"\";\r\n    this.resetQ = \"\";\r\n    this.resetA = \"\";\r\n    this.setState({\r\n      showLookUpAccountDialog: false,\r\n      showSecurityQuestionDialog: false,\r\n      showResetPaswordDialog: false,\r\n    });\r\n  };\r\n\r\n  //handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n  //provider\r\n  handleOAuthLogin = (provider) => {\r\n    window.open(`/auth/${provider}`, \"_self\");\r\n  };\r\n\r\n  //handleOAuthLoginClick -- Called whent the user clicks on button to\r\n  //authenticate via a third-party OAuth service. The name of the provider is\r\n  //passed in as a parameter.\r\n  handleOAuthLoginClick = (provider) => {\r\n    this.setState({\r\n      [provider + \"Icon\"]: \"fa fa-spin fa-spinner\",\r\n      [provider + \"Label\"]: \"Connecting...\",\r\n    });\r\n    setTimeout(() => this.handleOAuthLogin(provider), 1000);\r\n  };\r\n\r\n  //getSecurityAnswer: Given the id, security question, and security answer obtained\r\n  //from the LookUpAccountDialog component, update state such that the user will\r\n  //next be prompted to enter security question and answer for verification\r\n  getSecurityAnswer = (userId, question, answer) => {\r\n    this.resetUserId = userId;\r\n    this.resetQ = question;\r\n    this.resetA = answer;\r\n    this.setState({\r\n      showLookUpAccountDialog: false,\r\n      showSecurityQuestionDialog: true,\r\n    });\r\n  };\r\n\r\n  //getNewPassword-- Called after user successfully provides correct answer\r\n  //to security question. Presents the \"Reset Password\" dialog box.\r\n  getNewPassword = () => {\r\n    this.setState({\r\n      showSecurityQuestionDialog: false,\r\n      showResetPaswordDialog: true,\r\n    });\r\n  };\r\n\r\n  //resetPassword--Called after the user successfully enters a new (acceptable)\r\n  //password. pw contains the new password. Call on the Update (PUT) server\r\n  //route to update the user's password in the database.\r\n  resetPassword = async (pw) => {\r\n    const url = \"/users/\" + this.resetUserId;\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify({ password: pw }),\r\n    });\r\n    if (res.status == 200) {\r\n      //successful update creation!\r\n      this.setState({\r\n        showResetPaswordDialog: false,\r\n        statusMsg: \"Password successfully reset!\",\r\n      });\r\n    } else {\r\n      //Unsuccessful account creation\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      this.setState({ showResetPasswordDialog: false, statusMsg: resText });\r\n    }\r\n  };\r\n\r\n  //newAccountCreated -- Called after successful creation of a new account\r\n  accountCreateDone = (msg, deleted) => {\r\n    this.setState({ statusMsg: msg, showCreateAccountDialog: false });\r\n  };\r\n\r\n  //closeStatusMsg -- Called when user clicks on \"x\" to dismiss status message\r\n  closeStatusMsg = () => {\r\n    this.setState({ statusMsg: \"\" });\r\n  };\r\n\r\n  //cancelCreateAccount -- called to hide Create Account dialog without creating acct\r\n  cancelCreateAccount = () => {\r\n    this.setState({ showCreateAccountDialog: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <center>\r\n          {this.state.statusMsg != \"\" ? (\r\n            <div className=\"status-msg\">\r\n              <span>{this.state.statusMsg}</span>\r\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                <span className=\"fa fa-times\"></span>\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          {this.state.showLookUpAccountDialog ? (\r\n            <LookUpAccountDialog\r\n              cancelResetPassword={this.cancelResetPassword}\r\n              getSecurityAnswer={this.getSecurityAnswer}\r\n            />\r\n          ) : null}\r\n          {this.state.showSecurityQuestionDialog ? (\r\n            <SecurityQuestionDialog\r\n              cancelResetPassword={this.cancelResetPassword}\r\n              question={this.resetQ}\r\n              answer={this.resetA}\r\n              getNewPassword={this.getNewPassword}\r\n            />\r\n          ) : null}\r\n          {this.state.showResetPaswordDialog ? (\r\n            <ResetPasswordDialog\r\n              cancelResetPassword={this.cancelResetPassword}\r\n              resetPassword={this.resetPassword}\r\n            />\r\n          ) : null}\r\n          <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n              Email:\r\n              <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n              />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n              Password:\r\n              <input\r\n                ref={this.passwordInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"password\"\r\n                id=\"passwordInput\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n              />\r\n            </label>\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n              id=\"loginBtn\"\r\n              type=\"submit\"\r\n              className=\"btn-color-theme btn btn-primary btn-block login-btn\"\r\n            >\r\n              <span id=\"login-btn-icon\" className={this.state.loginBtnIcon} />\r\n              &nbsp;{this.state.loginBtnLabel}\r\n            </button>\r\n            <p>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-link login-link\"\r\n                onClick={() => {\r\n                  this.setState({ showCreateAccountDialog: true });\r\n                }}\r\n              >\r\n                Create an account\r\n              </button>{\" \"}\r\n              |\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-link login-link\"\r\n                onClick={() => {\r\n                  this.setState({ showLookUpAccountDialog: true });\r\n                }}\r\n              >\r\n                Reset your password\r\n              </button>\r\n            </p>\r\n            {/*\r\n              Disabling both OAuth buttons because it doesn't align with the functionality\r\n              of our app \r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-github\"\r\n              onClick={() => this.handleOAuthLoginClick(\"github\")}\r\n            >\r\n              <span className={this.state.githubIcon}></span>&nbsp;\r\n              {this.state.githubLabel}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              id=\"googleBtn\"\r\n              className=\"btn btn-google\"\r\n              onClick={() => this.handleOAuthLoginClick(\"google\")}\r\n            >\r\n              <span className={this.state.googleIcon}></span>&nbsp;\r\n              {this.state.googleLabel}\r\n            </button> */}\r\n          </form>\r\n          {this.state.showCreateAccountDialog ? (\r\n            <CreateEditAccountDialog\r\n              create={true}\r\n              done={this.accountCreateDone}\r\n              cancel={this.cancelCreateAccount}\r\n            />\r\n          ) : null}\r\n          {this.state.showResetPasswordDialog ? <ResetPasswordDialog /> : null}\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nclass FeedPage extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      players: [],\r\n      names: [],\r\n      nflList: [],\r\n      positions: [],\r\n      playerName: \"\",\r\n      playerStats: [],\r\n      showRender: false,\r\n    };\r\n  }\r\n\r\n  // getCurrentData = async() => {\r\n  //   var filters = {\r\n  //     \"players\": {\r\n  //         \"limit\": 1500,\r\n  //         \"sortDraftRanks\": {\r\n  //             \"sortPriority\": 100,\r\n  //             \"sortAsc\": true,\r\n  //             \"value\": \"STANDARD\"\r\n  //         }\r\n  //     }\r\n  //   };\r\n\r\n  //   var options = {\r\n  //       \"headers\": {\r\n  //           \"x-fantasy-filter\": JSON.stringify(filters)\r\n  //       }\r\n  //   };\r\n\r\n  //   const response = await fetch('https://fantasy.espn.com/apis/v3/games/FFL/seasons/2020/segments/0/leaguedefaults/1?view=kona_player_info', options);\r\n  //   const d = await response.json();\r\n  //   this.setState({ data: d });\r\n\r\n  // console.log(data);\r\n  // console.log(data.players[0]);\r\n  // console.log(data.players[0].player.stats);\r\n  // console.log(data.players[0].player.stats[0]);\r\n  // console.log(\"new one\" + data.players[0].player.stats[0].stats)\r\n  // console.log(data.players[0].player.stats[0].appliedTotal)\r\n  // console.log(this.state.playerName);\r\n  // console.long(data[0].player.fullName);\r\n  // for (let i = 0; i < data.players.length; i++){\r\n  //   for (let r = 0; r < this.state.players.length; ++r) {\r\n  //     if (data.players[i].player.fullName == this.state.players[r].name) {\r\n  //       for (let k = 0; k < data.players[i].player.stats.length; k++){\r\n  //         // console.log(\"statSource: \" + data.players[i].player.stats[k].statSourceId + \"StatSplit: \" + data.players[i].player.stats[k].statSplitTypeId)\r\n  //         if (data.players[i].player.stats[k].seasonId == 2020 && data.players[i].player.stats[k].scoringPeriodId == 0\r\n  //             && data.players[i].player.stats[k].statSourceId == 0 && data.players[i].player.stats[k].statSplitTypeId == 0){\r\n  //           console.log(this.state.players[r].name + \" Week \" + data.players[i].player.stats[k].scoringPeriodId)\r\n  //           console.log(data.players[i].player.stats[k].appliedTotal);\r\n  //           let temp = [];\r\n  //           temp.push(this.state.players[r].name);\r\n  //           temp.push(this.state.players[r].position);\r\n  //           temp.push(this.state.players[r].starter);\r\n  //           temp.push(data.players[i].player.stats[k].appliedTotal);\r\n  //           this.state.playerStats.push(temp);\r\n  //           console.log(this.state.playerStats[0][0]);\r\n  //           console.log(this.state.playerStats[0][1]);\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // this.confirmRender();\r\n  // return this.renderTable()\r\n  // }\r\n\r\n  getFFP = () => {\r\n    this.props.getCurrentData();\r\n    console.log(this.props.playerData);\r\n    if(this.props.playerData != 0){\r\n      for (let i = 0; i < this.props.playerData.players.length; i++) {\r\n        for (let r = 0; r < this.state.players.length; ++r) {\r\n          if (\r\n            this.props.playerData.players[i].player.fullName ==\r\n            this.state.players[r].name\r\n          ) {\r\n            for (\r\n              let k = 0;\r\n              k < this.props.playerData.players[i].player.stats.length;\r\n              k++\r\n            ) {\r\n              // console.log(\"statSource: \" + data.players[i].player.stats[k].statSourceId + \"StatSplit: \" + data.players[i].player.stats[k].statSplitTypeId)\r\n              if (\r\n                this.props.playerData.players[i].player.stats[k].seasonId ==\r\n                  2020 &&\r\n                this.props.playerData.players[i].player.stats[k]\r\n                  .scoringPeriodId == 0 &&\r\n                this.props.playerData.players[i].player.stats[k].statSourceId ==\r\n                  0 &&\r\n                this.props.playerData.players[i].player.stats[k]\r\n                  .statSplitTypeId == 0\r\n              ) {\r\n                //console.log(this.state.players[r].name + \" Week \" + this.props.playerData.players[i].player.stats[k].scoringPeriodId)\r\n                //console.log(this.props.playerData.players[i].player.stats[k].appliedTotal);\r\n                let temp = [];\r\n                temp.push(this.state.players[r].name);\r\n                temp.push(this.state.players[r].position);\r\n                temp.push(this.state.players[r].starter);\r\n                temp.push(\r\n                  this.props.playerData.players[i].player.stats[k].appliedTotal\r\n                );\r\n                this.state.playerStats.push(temp);\r\n                //console.log(this.state.playerStats[0][0]);\r\n                console.log(this.state.playerStats[0][1]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    \r\n\r\n    this.confirmRender();\r\n    }\r\n  };\r\n  confirmRender = () => {\r\n    this.setState({ showRender: true });\r\n  };\r\n\r\n  populateForm = () => {\r\n    for (let r = 0; r < this.state.players.length; ++r) {\r\n      if (this.state.players[r].name != null) {\r\n        this.state.names[r] = this.state.players[r].name;\r\n        this.state.positions[r] = this.state.players[r].position;\r\n        // this.names[r] = this.state.players[r].name\r\n      }\r\n    }\r\n    this.renderTable();\r\n  };\r\n\r\n  //componentDidMount\r\n  componentDidMount = async () => {\r\n    let response = await fetch(\"/users/\" + this.props.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    console.log(obj.players);\r\n    this.setState({\r\n      players: obj.players,\r\n    });\r\n    // this.populateForm();\r\n    // this.getCurrentData();\r\n    // this.props.getCurrentData();\r\n    this.getFFP();\r\n  };\r\n\r\n  renderTable = () => {\r\n    let table = [];\r\n    // for (let r = 0; r < this.state.players.length; ++r) {\r\n    //   if (this.state.players[r].starter == true){\r\n    //     table.push(\r\n    //       <tr key={r}>\r\n    //         <td>{this.state.players[r].name}</td>\r\n    //         <td>{this.state.players[r].position}</td>\r\n    //       </tr>\r\n    //     );\r\n    //   }\r\n    // }\r\n\r\n    // table.push(<h1>Bench</h1>)\r\n\r\n    // for (let s = 0; s < this.state.players.length; ++s) {\r\n    //   if (this.state.players[s].starter == false){\r\n    //     table.push(\r\n    //       <tr key={s}>\r\n    //         <td>{this.state.players[s].name}</td>\r\n    //         <td>{this.state.players[s].position}</td>\r\n    //       </tr>\r\n    //     );\r\n    //   }\r\n    // }\r\n\r\n    for (let r = 0; r < this.state.playerStats.length; ++r) {\r\n      if (this.state.playerStats[r][2] == true) {\r\n        table.push(\r\n          <tr key={r}>\r\n            <td>{this.state.playerStats[r][0]}</td>\r\n            <td>{this.state.playerStats[r][1]}</td>\r\n            <td>{this.state.playerStats[r][3]}</td>\r\n            <td>\r\n              <button>\r\n                <span className=\"fa fa-eye\"></span>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    }\r\n\r\n    table.push(<h1>Bench</h1>);\r\n\r\n    for (let s = 0; s < this.state.playerStats.length; ++s) {\r\n      if (this.state.playerStats[s][2] == false) {\r\n        table.push(\r\n          <tr key={s}>\r\n            <td>{this.state.playerStats[s][0]}</td>\r\n            <td>{this.state.playerStats[s][1]}</td>\r\n            <td>{this.state.playerStats[s][3]}</td>\r\n            {/* <td><button onClick={this.props.menuOpen ? null : () => \r\n          this.editRound(r)}> */}\r\n            <td>\r\n              <button>\r\n                <span className=\"fa fa-eye\"></span>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    }\r\n\r\n    return table;\r\n  };\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  //ToDo: change table headers to match issue\r\n  render() {\r\n    return (\r\n      <div className=\"padded-page\">\r\n        <h1>Starting Lineup</h1>\r\n        <table className=\"table table-hover\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Player</th>\r\n              <th>Position</th>\r\n              <th>2020 Season FFP</th>\r\n              <th>View Player Stats</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.showRender == true ? this.renderTable() : null}\r\n          \r\n            {/* {this.state.playerStats.length === undefined ? (\r\n              <tr>\r\n                <td colSpan=\"5\" style={{ fontStyle: \"italic\" }}>\r\n                  Team not drafted yet\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n            this.renderTable()\r\n            // () => this.getCurrentData()\r\n            )}  */}\r\n          </tbody>\r\n        </table>\r\n        {/* {this.state.showConfirmDelete ? (\r\n          <ConfirmDeleteRound\r\n            close={() => this.setState({ showConfirmDelete: false })}\r\n            deleteRound={this.deleteRound}\r\n          />\r\n        ) : null} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FeedPage;\r\n","import React from \"react\";\r\n\r\nclass Matchup extends React.Component {\r\n  //ToDo: Assign matchups for each week in a season between all league members.\r\n  //We couldn't finish this matchup implementation in time by week 4\r\n  //A league and teams are already established, just need to randomize the pairing\r\n  //of teams against each other and adding up points for each player that week.\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"padded-page\">\r\n        <center>Page Under Construction</center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Matchup;\r\n","import React from \"react\";\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nclass CoursesTable extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  //populates table with league information\r\n  renderTable = () => {\r\n    let table = [];\r\n    for (let r = 0; r < this.props.league.length; ++r) {\r\n      table.push(\r\n        <tr key={r}>\r\n          <td>{this.props.league[r].users.teamName}</td>\r\n          <td>{this.props.league[r].users.win}</td>\r\n          <td>{this.props.league[r].users.loss}</td>\r\n          <td>{this.props.league[r].users.displayName}</td>\r\n        </tr>\r\n      );\r\n    }\r\n    return table;\r\n  };\r\n\r\n  //populates the table with headers and data from rendertable\r\n  //if not in league will prompt to join one\r\n  render() {\r\n    return (\r\n      <div className=\"padded-page\">\r\n        <h1></h1>\r\n        <table className=\"table table-hover\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Team Name</th>\r\n              <th>Wins</th>\r\n              <th>Losses</th>\r\n              <th>Display Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.keys(this.props.league).length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"5\" style={{ fontStyle: \"italic\" }}>\r\n                  No data to show. Not in a league\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              this.renderTable()\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoursesTable;\r\n","import React from \"react\";\r\nimport CoursesTable from \"./CoursesTable\";\r\nimport AppMode from \"./../AppMode.js\";\r\n// THis now becomes \"Leage\" instead of Courses\r\nclass CoursesPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    //copy from teampage\r\n    //use league route to get a league obj\r\n    //inside the league obj is :\r\n    // obj.leagueName\r\n    // this.setstate(players: obj.players[])\r\n    //  this.state.players[] has team info\r\n    // reuse getffp to create a team viewer for each user in the league\r\n  };\r\n  //need to add a function that fills the table with current league data\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"padded-page\">\r\n        <center>\r\n          <h1>League Page</h1>\r\n          <h2>{this.props.userObj.league.LeagueName}</h2>\r\n        </center>\r\n        <CoursesTable\r\n          league={this.props.userObj.league}\r\n          changeMode={this.props.changeMode}\r\n          menuOpen={this.props.menuOpen}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoursesPage;\r\n","import React from \"react\";\r\n\r\nclass ProfilePage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      achievements: [],\r\n    };\r\n  }\r\n  renderTable = () => {\r\n    let table = [];\r\n    for (let r = 0; r < this.state.achievements.length; ++r) {\r\n      table.push(\r\n        <tr key={r}>\r\n          <td>{this.state.achievements[r].title}</td>\r\n          <td>{this.state.achievements[r].description}</td>\r\n        </tr>\r\n      );\r\n    }\r\n    return table;\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    let response = await fetch(\"/users/\" + this.props.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    console.log(obj.achievements);\r\n    this.setState({\r\n      achievements: obj.achievements,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"padded-page\">\r\n        <div className=\"padded-page\">\r\n          <div class=\"profile-container\">\r\n            <div class=\"header\"></div>\r\n            <div class=\"content\">\r\n              <div class=\"form-container\">\r\n                <center>\r\n                  <h1>{this.props.userObj.displayName}</h1>\r\n                </center>\r\n                <div className=\"padded-page\">\r\n                  <h3>Achievements</h3>\r\n                  <table>\r\n                    <tbody class=\"thead-light\">\r\n                      {Object.keys(this.state.achievements).length === 0 ? (\r\n                        <tr>\r\n                          <td\r\n                            colSpan=\"2\"\r\n                            style={{ fontStyle: \"italic\", width: \"25%\" }}\r\n                          >\r\n                            No data to show\r\n                          </td>\r\n                        </tr>\r\n                      ) : (\r\n                        this.renderTable()\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div class=\"form-item\"></div>\r\n                <div class=\"form-item\"></div>\r\n                <div class=\"bottom-item\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\r\nimport { async } from \"regenerator-runtime\";\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nclass DraftPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      NFLPlayerList: [],\r\n      leaguePlayers: [],\r\n      leagueData:{},\r\n      QBList: [],\r\n      RBList: [],\r\n      WRList: [],\r\n      TEList: [],\r\n      KList: [],\r\n      DefList: [],\r\n      positions: [\"QB\", \"RB\", \"WR\", \"TE\", \"Kicker\"],\r\n\r\n\r\n      qb: \"\",\r\n      rb: \"\",\r\n      wr: \"\",\r\n      te: \"\",\r\n      k: \"\",\r\n      def: \"\",\r\n    };\r\n  }\r\n\r\n  setList = () => {\r\n    this.setState({ NFLPlayerList: this.props.playerData});\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    for(let i = 0; i < 5; i++){\r\n      let response = await fetch(\"/getallplayers/\" + this.state.positions[i]);\r\n      response = await response.json();\r\n      const obj = JSON.parse(response);\r\n      console.log(obj);\r\n      console.log(obj.players);\r\n      if(i == 0){\r\n        this.setState({\r\n          QBList: obj,\r\n        });  \r\n      }\r\n      else if(i == 1){\r\n        this.setState({\r\n          RBList: obj,\r\n        });  \r\n      }\r\n      else if(i == 2){\r\n        this.setState({\r\n          WRList: obj,\r\n        });  \r\n      }\r\n      else if(i == 3){\r\n        this.setState({\r\n          TEList: obj,\r\n        });  \r\n      }\r\n      else if(i == 4){\r\n        this.setState({\r\n          KList: obj,\r\n        });  \r\n      }\r\n    }\r\n    this.getLeagueData();\r\n  }\r\n\r\n  //get the data from the league using the leagueId\r\n  getLeagueData = async() => {\r\n    // let data = await fetch(\"/getleague/\" + this.props.userObj.leagueId);\r\n    // data = await data.json();\r\n    // console.log(\"data: \");\r\n    // console.log(data);\r\n    // const obj = JSON.parse(data);\r\n    let response = await fetch(\"/getleague/555\"); // OR + this.props.userObj.leagueId);\r\n      response = await response.json();\r\n      const obj = JSON.parse(response);\r\n      console.log(obj);\r\n    console.log(\"Inside getLeagueData - printing league object\");\r\n    this.setState({leagueData: obj});\r\n  }\r\n\r\n  //get all players that are in the league\r\n  getListOfAllPlayersFromLeague = async() => {\r\n    var unavailablePlayers = []; //players already owned by other users\r\n    var leagueUserIds = this.state.leagueData[0].userIds; //all the user from the league\r\n    \r\n    var i;\r\n    for (i = 0; i < leagueUserIds.length(); i++) {\r\n      let data = await fetch(\"/users/\" + leagueUserIds[i]);\r\n      data = await data.json();\r\n      const obj = JSON.parse(data);\r\n\r\n      var j;\r\n      for (j = 0; j < obj.players.length(); j++) {\r\n        var player = obj.players[i];\r\n        unavailablePlayers.push(player)\r\n      }\r\n    }\r\n\r\n    this.setState({leaguePlayers: unavailablePlayers}); \r\n\r\n  }\r\n\r\n  validatePlayers = () => {\r\n    this.getListOfAllPlayersFromLeague();\r\n\r\n    var duplicatePlayers = [];\r\n    var i, j;\r\n    for (i = 0; i < this.state.leaguePlayers.length(); i++) {\r\n      if (this.state.qb === this.state.leaguePlayers[i]) {\r\n        duplicatePlayers.push(this.state.qb);\r\n      } else if (this.state.rb === this.state.leaguePlayers[i]) {\r\n        duplicatePlayers.push(this.state.rb);\r\n      } else if (this.state.wr === this.state.leaguePlayers[i]) {\r\n        duplicatePlayers.push(this.state.wr);\r\n      } else if (this.state.te === this.state.leaguePlayers[i]) {\r\n        duplicatePlayers.push(this.state.te);\r\n      } else if (this.state.k === this.state.leaguePlayers[i]) {\r\n        duplicatePlayers.push(this.state.k);\r\n      } else {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (duplicatePlayers.length() >= 1) { //duplicate players\r\n      alert(\"Cannot assign following players: \" + duplicatePlayers.join());\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  //Add players to the backend if players aren't selected by other members in the league\r\n  addPlayers = async (newData) => {\r\n    // this.getLeagueData();\r\n    // var validate = this.validatePlayers();\r\n\r\n    // if (validate === true) {\r\n      const url = 'http://localhost:8081/addplayers/' + this.props.userObj.id;\r\n      const res = await fetch(url, {\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n              },\r\n          method: 'POST',\r\n          body: JSON.stringify(newData)}); \r\n      const msg = await res.text();\r\n      if (res.status != 200) {\r\n          console.log(msg);\r\n      } else {\r\n        console.log(msg);\r\n      }\r\n    // } else {\r\n    //   alert(\"Players you have selected are taken by other users in the league. Please select new players!\");\r\n    // }\r\n  }; \r\n\r\n\r\n  handleSubmit = () => {\r\n    //send team info to backend\r\n\r\n    var player1 = {};\r\n    player1.name = this.state.qb;\r\n    player1.position = \"QB\";\r\n    player1.starter = true;\r\n    this.addPlayers(player1);\r\n\r\n    var player2 = {};\r\n    player2.name = this.state.rb;\r\n    player2.position = \"RB\";\r\n    player2.starter = true;\r\n    this.addPlayers(player2);\r\n\r\n    var player3 = {};\r\n    player3.name = this.state.wr;\r\n    player3.position = \"WR\";\r\n    player3.starter = true;\r\n    this.addPlayers(player3);\r\n\r\n    var player4 = {};\r\n    player4.name = this.state.te;\r\n    player4.position = \"TE\";\r\n    player4.starter = true;\r\n    this.addPlayers(player4);\r\n\r\n    var player5 = {};\r\n    player5.name = this.state.k;\r\n    player5.position = \"Kicker\";\r\n    player5.starter = true;\r\n    this.addPlayers(player5);\r\n\r\n    this.props.changeMode(AppMode.TEAM);\r\n  };\r\n\r\n  render() {\r\n      var MakeItem = function(X) {\r\n          return <option>{X.name}</option>;\r\n      };   \r\n    \r\n    return (\r\n    <div className=\"padded-page\">\r\n      <center>\r\n        <h1>Draft My Offline Team</h1>\r\n      </center>\r\n      {/* {this.props.playerData != 0 ? */}\r\n      <div>\r\n        <center>\r\n          <br/>\r\n          QB: \r\n          <select id=\"qb\" style={{width: `${150}px`}} value={this.state.qb}\r\n                  onChange={(value) => { this.setState({ qb: value.target.value }); }}>\r\n            {(this.state.QBList).map(MakeItem)}\r\n          </select>\r\n          <br/>\r\n          <br/>\r\n          RB: \r\n          <select id=\"rb\" style={{width: `${150}px`}} value={this.state.rb}\r\n                  onChange={(value) => { this.setState({ rb: value.target.value }); }}>          \r\n            {(this.state.RBList).map(MakeItem)}\r\n          </select>\r\n          <br/>\r\n          <br/>\r\n          WR: \r\n          <select id=\"wr\" style={{width: `${150}px`}} value={this.state.wr}\r\n                  onChange={(value) => { this.setState({ wr: value.target.value }); }}>\r\n            {(this.state.WRList).map(MakeItem)}\r\n          </select>\r\n          <br/>\r\n          <br/>\r\n          TE: \r\n          <select id=\"te\" style={{width: `${150}px`}} value={this.state.te}\r\n                  onChange={(value) => { this.setState({ te: value.target.value }); }}>\r\n            {(this.state.TEList).map(MakeItem)}\r\n          </select>\r\n          <br/>\r\n          <br/>\r\n          K: \r\n          <select id=\"k\" style={{width: `${150}px`}} value={this.state.k}\r\n                  onChange={(value) => { this.setState({ k: value.target.value }); }}>\r\n            {(this.state.KList).map(MakeItem)}\r\n          </select>\r\n          <br/>\r\n          <br/>\r\n          {/* Def: \r\n          <select style={{width: `${150}px`}} value={this.state.def}\r\n                  onChange={(value) => { this.setState({ def: value.target.value }); }}>\r\n            {(this.state.DefList).map(MakeItem)}\r\n          </select> */}\r\n          <br/>\r\n          {/* <br/> */}\r\n          <button\r\n              id=\"draftTeamBtn\"\r\n              type=\"submit\"\r\n              className=\"btn-color-theme btn btn-primary btn-block\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              <span id=\"draft-btn-icon\" className=\"submit-draft\" />\r\n              &nbsp;Submit Team\r\n          </button>\r\n        </center>\r\n      </div>\r\n      {/* : null } */}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DraftPage;\r\n","import React from 'react';\r\n\r\nclass AboutBox extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>About SpeedScore</h3>\r\n                <button className=\"modal-close\" onClick={this.props.close}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <img\r\n                src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n                height=\"200\" width=\"200\"/>\r\n                <h3>The World's First and Only Suite of Apps for\r\n                Speedgolf</h3>\r\n                <p>Version CptS 489 Fa20 Complete (MERN)<br/>\r\n                &copy; 2017-20 The Professor of Speedgolf. All rights\r\n                reserved.\r\n                </p>\r\n                <div style={{textAlign: \"left\"}}>\r\n                <p>SpeedScore apps support</p>\r\n                <ul>\r\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                <li>tracking personal speedgolf rounds and sharing results\r\n                (<i>SpeedScore Track&reg;</i>)</li>\r\n                <li>finding speedgolf-friendly courses, booking tee times, and\r\n                paying to play speedgolf by the minute (<i>SpeedScore\r\n                Play&reg;</i>)</li>\r\n                </ul>\r\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                associate professor of computer science at Washington State\r\n                University and the <i>Professor of Speedgolf</i>, with support\r\n                from Scott Dawley, CEO of Speedgolf USA, LLC.</p>\r\n                <p>For more information on SpeedScore, visit <a\r\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                site</a>. For more information on speedgolf, visit <a\r\n                href=\"http://playspeedgolf.com\"\r\n                target=\"_blank\">playspeedgolf.com</a> and <a\r\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                USA</a>.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.close}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AboutBox;","import React from \"react\";\r\nimport NavBar from \"./NavBar.js\";\r\nimport SideMenu from \"./SideMenu.js\";\r\nimport ModeBar from \"./ModeBar.js\";\r\nimport CreateEditAccountDialog from \"./CreateEditAccountDialog.js\";\r\nimport LoginPage from \"./LoginPage.js\";\r\nimport AppMode from \"./../AppMode.js\";\r\nimport TeamPage from \"./TeamPage.js\";\r\nimport Matchup from \"./Matchup.js\";\r\nimport CoursesPage from \"./CoursesPage.js\";\r\nimport Profile from \"./ProfilePage\";\r\nimport AboutBox from \"./AboutBox.js\";\r\nimport Draft from \"./DraftPage.js\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport DraftPage from \"./DraftPage.js\";\r\nimport { async } from \"regenerator-runtime\";\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to Fantasy Football\";\r\nmodeTitle[AppMode.TEAM] = \"My Team\";\r\nmodeTitle[AppMode.MATCHUP] = \"Weekly Matchup\";\r\nmodeTitle[AppMode.COURSES] = \"Courses\";\r\nmodeTitle[AppMode.DRAFT] = \"Draft\";\r\nmodeTitle[AppMode.PROFILE] = \"Profile\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.TEAM] = TeamPage;\r\nmodeToPage[AppMode.MATCHUP] = Matchup;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\nmodeToPage[AppMode.DRAFT] = DraftPage;\r\nmodeToPage[AppMode.PROFILE] = ProfilePage;\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      league: \"\",\r\n      mode: AppMode.LOGIN,\r\n      menuOpen: false,\r\n      authenticated: false,\r\n      userObj: { displayName: \"\", profilePicURL: \"\" },\r\n      editAccount: false,\r\n      showEditAccountDialog: false,\r\n      statusMsg: \"\",\r\n      showAboutDialog: false,\r\n      showDraftDialog: false,\r\n      playerData: [],\r\n    };\r\n  }\r\n\r\n  //componentDidMount\r\n  componentDidMount() {\r\n    if (!this.state.authenticated) {\r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.MATCHUP, //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in\r\n  //the database. The function calls the users/:userid (GET) route to update\r\n  //the userObj state var based on the latest database changes, and sets the\r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to\r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async (newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode,\r\n    });\r\n  };\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({ mode: newMode });\r\n  };\r\n\r\n  openMenu = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  openDraft = () => {\r\n    this.setState({ showDraftDialog: true });\r\n  };\r\n\r\n  closeDraft = () => {\r\n    this.setState({ showDraftDialog: false });\r\n  };\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState((prevState) => ({ menuOpen: !prevState.menuOpen }));\r\n  };\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({ userId: Id, authenticated: true });\r\n  };\r\n\r\n  showEditAccount = () => {\r\n    this.setState({ showEditAccountDialog: true });\r\n  };\r\n\r\n  cancelEditAccount = () => {\r\n    this.setState({ showEditAccountDialog: false });\r\n  };\r\n\r\n  //editAccountDone -- called after successful edit or\r\n  //deletion of user account. msg contains the status\r\n  //message and deleted indicates whether an account was\r\n  //edited (deleted == false) or deleted (deleted == true)\r\n  editAccountDone = (msg, deleted) => {\r\n    if (deleted) {\r\n      this.setState({\r\n        showEditAccountDialog: false,\r\n        statusMsg: msg,\r\n        mode: AppMode.LOGIN,\r\n      });\r\n    } else {\r\n      this.setState({ showEditAccountDialog: false, statusMsg: msg });\r\n    }\r\n  };\r\n\r\n  closeStatusMsg = () => {\r\n    this.setState({ statusMsg: \"\" });\r\n  };\r\n\r\n  getCurrentData = async () => {\r\n    var filters = {\r\n      players: {\r\n        limit: 1500,\r\n        sortDraftRanks: {\r\n          sortPriority: 100,\r\n          sortAsc: true,\r\n          value: \"STANDARD\",\r\n        },\r\n      },\r\n    };\r\n\r\n    var options = {\r\n      headers: {\r\n        \"x-fantasy-filter\": JSON.stringify(filters),\r\n      },\r\n    };\r\n\r\n    const response = await fetch(\r\n      \"https://fantasy.espn.com/apis/v3/games/FFL/seasons/2020/segments/0/leaguedefaults/1?view=kona_player_info\",\r\n      options\r\n    );\r\n    const data = await response.json();\r\n    this.setState({ playerData: data });\r\n  };\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div className=\"padded-page\">\r\n        {/* {this.state.showAboutDialog ? (\r\n          <AboutBox close={() => this.setState({ showAboutDialog: false })} />\r\n        ) : null} */}\r\n        {this.state.showDraftDialog ? (\r\n          <DraftPage close={this.closeDraft} userObj={this.state.userObj} />\r\n        ) : null}\r\n        {this.state.statusMsg != \"\" ? (\r\n          <div className=\"status-msg\">\r\n            <span>{this.state.statusMsg}</span>\r\n            <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n              <span className=\"fa fa-times\"></span>\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        {this.state.showEditAccountDialog ? (\r\n          <CreateEditAccountDialog\r\n            create={false}\r\n            userId={this.state.userObj.id}\r\n            done={this.editAccountDone}\r\n            cancel={this.cancelEditAccount}\r\n          />\r\n        ) : null}\r\n        <NavBar\r\n          title={modeTitle[this.state.mode]}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}\r\n        />\r\n        <SideMenu\r\n          menuOpen={this.state.menuOpen}\r\n          mode={this.state.mode}\r\n          toggleMenuOpen={this.toggleMenuOpen}\r\n          displayName={this.state.userObj.displayName}\r\n          profilePicURL={this.state.userObj.profilePicURL}\r\n          localAccount={this.state.userObj.authStrategy === \"local\"}\r\n          editAccount={this.showEditAccount}\r\n          logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n          showAbout={() => {\r\n            this.setState({ showAboutDialog: true });\r\n          }}\r\n          openDraft={this.openDraft}\r\n          changeMode={this.handleChangeMode}\r\n          playerData={this.state.playerData}\r\n          getCurrentData={this.getCurrentData}\r\n          getLeagueData={this.getLeagueData}\r\n        />\r\n        <ModeBar\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n        />\r\n        <ModePage\r\n          menuOpen={this.state.menuOpen}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          userObj={this.state.userObj}\r\n          refreshOnUpdate={this.refreshOnUpdate}\r\n          playerData={this.state.playerData}\r\n          getCurrentData={this.getCurrentData}\r\n          getLeagueData={this.getLeagueData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}